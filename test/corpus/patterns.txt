================================================================================
pattern_opaque_tag
================================================================================
bfs = \a, b, @OTag c -> a b c
--------------------------------------------------------------------------------

(file
  (value_declaration
    (decl_left
      (identifier_pattern
        (identifier)))
    (expr_body
      (anon_fun_expr
        (backslash)
        (argument_patterns
          (identifier_pattern
            (identifier))
          (identifier_pattern
            (identifier))
          (tag_pattern
            (opaque_tag)
            (identifier_pattern
              (identifier))))
        (arrow)
        (expr_body
          (function_call_expr
            (variable_expr
              (identifier))
            (variable_expr
              (identifier))
            (variable_expr
              (identifier))))))))

================================================================================
pattern_tag
================================================================================
bfs = \a, b, Tag c -> a b c
--------------------------------------------------------------------------------

(file
  (value_declaration
    (decl_left
      (identifier_pattern
        (identifier)))
    (expr_body
      (anon_fun_expr
        (backslash)
        (argument_patterns
          (identifier_pattern
            (identifier))
          (identifier_pattern
            (identifier))
          (tag_pattern
            (tag)
            (identifier_pattern
              (identifier))))
        (arrow)
        (expr_body
          (function_call_expr
            (variable_expr
              (identifier))
            (variable_expr
              (identifier))
            (variable_expr
              (identifier))))))))

================================================================================
pattern_range
================================================================================
bfs = \a, b, [head, .. as tail] -> a b head tail
--------------------------------------------------------------------------------

(file
  (value_declaration
    (decl_left
      (identifier_pattern
        (identifier)))
    (expr_body
      (anon_fun_expr
        (backslash)
        (argument_patterns
          (identifier_pattern
            (identifier))
          (identifier_pattern
            (identifier))
          (list_pattern
            (identifier_pattern
              (identifier))
            (range_pattern
              (identifier))))
        (arrow)
        (expr_body
          (function_call_expr
            (variable_expr
              (identifier))
            (variable_expr
              (identifier))
            (variable_expr
              (identifier))
            (variable_expr
              (identifier))))))))

================================================================================
pattern_range_many
================================================================================

record=\bytes,dict->
    when bytes is 
    ['}']-> decOk (dict) rest

--------------------------------------------------------------------------------

(file
  (value_declaration
    (decl_left
      (identifier_pattern
        (identifier)))
    (expr_body
      (anon_fun_expr
        (backslash)
        (argument_patterns
          (identifier_pattern
            (identifier))
          (identifier_pattern
            (identifier)))
        (arrow)
        (expr_body
          (when_is_expr
            (when)
            (variable_expr
              (identifier))
            (is)
            (when_is_branch
              (list_pattern
                (const
                  (char)))
              (arrow)
              (expr_body
                (function_call_expr
                  (variable_expr
                    (identifier))
                  (parenthesized_expr
                    (expr_body
                      (variable_expr
                        (identifier))))
                  (variable_expr
                    (identifier)))))))))))
