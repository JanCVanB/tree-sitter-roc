================================================================================
recovery
================================================================================
## JSON is a data format that is easy for humans to read and write. It is
## commonly used to exhange data between two systems such as a server and a
## client (e.g. web browser).
##
## This module implements functionality to serialise and de-serialise Roc types
## to and from JSON data. Using the `Encode` and `Decode` builtins this process
## can be achieved without the need to write custom encoder and decoder functions
## to parse UTF-8 strings.
##
## Here is a basic example which shows how to parse a JSON record into a Roc
## type named `Language` which includes a `name` field. The JSON string is
## decoded and then the field is encoded back into a UTF-8 string.
##
## ```
## Language : {
##     name : Str,
## }
##
## jsonStr = Str.toUtf8 "{\"name\":\"Röc Lang\"}"
##
## result : Result Language _
## result =
##     jsonStr
##     |> Decode.fromBytes Json.json # returns `Ok {name : "Röc Lang"}`
##
## name =
##     decodedValue <- Result.map result
##
##     Encode.toBytes decodedValue.name Json.json
##
## expect name == Ok (Str.toUtf8 "\"Röc Lang\"")
## ```
interface Core
    exposes [
        Json,
        json,
        jsonWithOptions,
    ]
    imports [
        Encode.{
            Encoder,
            EncoderFormatting,
            appendWith,
        },
    ]

## An opaque type with the `EncoderFormatting` and
## `DecoderFormatting` abilities.
Json := { fieldNameMapping : FieldNameMapping, skipMissingProperties : Bool }
    implements [
        EncoderFormatting {
            u8: encodeU8,
            u16: encodeU16,
            u32: encodeU32,
            u64: encodeU64,
            u128: encodeU128,
            i8: encodeI8,
            i16: encodeI16,
            i32: encodeI32,
            i64: encodeI64,
            i128: encodeI128,
            f32: encodeF32,
            f64: encodeF64,
            dec: encodeDec,
            bool: encodeBool,
            string: encodeString,
            list: encodeList,
            record: encodeRecord,
            tuple: encodeTuple,
            tag: encodeTag,
        },
        DecoderFormatting {
            u8: decodeU8,
            u16: decodeU16,
            u32: decodeU32,
            u64: decodeU64,
            u128: decodeU128,
            i8: decodeI8,
            i16: decodeI16,
            i32: decodeI32,
            i64: decodeI64,
            i128: decodeI128,
            f32: decodeF32,
            f64: decodeF64,
            dec: decodeDec,
            bool: decodeBool,
            string: decodeString,
            list: decodeList,
            record: decodeRecord,
            tuple: decodeTuple,
        },
    ]

## Returns a JSON `Encoder` and `Decoder`
json = @Json { fieldNameMapping: Default, skipMissingProperties: Bool.true }

## Returns a JSON `Encoder` and `Decoder` with configuration options
##
## `skipMissingProperties` - if `True` the decoder will skip additional properties
## in the json that are not present in the model. (Default: `True`)
jsonWithOptions = \{ fieldNameMapping ? Default, skipMissingProperties ? Bool.true } ->
    @Json { fieldNameMapping, skipMissingProperties }

## Mapping between Roc record fields and JSON object names
FieldNameMapping : [
    Default, # no transformation
    SnakeCase, # snake_case
    PascalCase, # PascalCase
    KebabCase, # kabab-case
    CamelCase, # camelCase
    Custom (Str -> Str), # provide a custom formatting
]

# TODO encode as JSON numbers as base 10 decimal digits
# e.g. the REPL `Num.toStr 12e42f64` gives
# "12000000000000000000000000000000000000000000" : Str
# which should be encoded as "12e42" : Str
numToBytes = \n ->
    n |> Num.toStr |> Str.toUtf8

encodeU8 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeU16 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeU32 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeU64 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeU128 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeI8 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeI16 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeI32 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeI64 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeI128 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeF32 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeF64 = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeDec = \n ->
    Encode.custom \bytes, @Json {} ->
        List.concat bytes (numToBytes n)

encodeBool = \b ->
    Encode.custom \bytes, @Json {} ->
        if b then
            List.concat bytes (Str.toUtf8 "true")
        else
            List.concat bytes (Str.toUtf8 "false")

--------------------------------------------------------------------------------

(file
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (interface_header
    (name)
    (interface_header_body
      (exposes
        (ident)
        (ident)
        (ident))
      (imports
        (imports_entry
          (long_module_name
            (module))
          (exposes_list
            (ident)
            (ident)
            (ident))))))
  (line_comment)
  (line_comment)
  (opaque_type_def
    (apply_type
      (concrete_type))
    (colon_equals)
    (type_annotation
      (implements_implementation
        (record_type
          (record_field_type
            (field_name)
            (type_annotation
              (apply_type
                (concrete_type))))
          (record_field_type
            (field_name)
            (type_annotation
              (apply_type
                (concrete_type)))))
        (implements)
        (apply_type
          (concrete_type)
          (apply_type_args
            (apply_type_arg
              (record_type
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))))))
        (apply_type
          (concrete_type)
          (apply_type_args
            (apply_type_arg
              (record_type
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable)))
                (record_field_type
                  (field_name)
                  (type_annotation
                    (bound_variable))))))))))
  (line_comment)
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (application_expression
        (tag_expression
          (opaque_tag))
        (application_args
          (record
            (record_field_expr
              (field_name)
              (expression_body
                (tag_expression
                  (tag))))
            (record_field_expr
              (field_name)
              (expression_body
                (long_identifier_or_op
                  (long_identifier
                    (module)
                    (identifier))))))))))
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (record_pattern
            (record_field_optional_pattern
              (field_name)
              (tag_expression
                (tag)))
            (record_field_optional_pattern
              (field_name)
              (long_identifier_or_op
                (long_identifier
                  (module)
                  (identifier))))))
        (arrow)
        (expression_body
          (application_expression
            (tag_expression
              (opaque_tag))
            (application_args
              (record
                (record_field_expr
                  (field_name))
                (record_field_expr
                  (field_name)))))))))
  (line_comment)
  (annotation_type_def
    (annotation_pre_colon
      (tag))
    (type_annotation
      (tags_type
        (apply_type
          (concrete_type))
        (line_comment)
        (apply_type
          (concrete_type))
        (line_comment)
        (apply_type
          (concrete_type))
        (line_comment)
        (apply_type
          (concrete_type))
        (line_comment)
        (apply_type
          (concrete_type))
        (line_comment)
        (apply_type
          (concrete_type)
          (apply_type_args
            (apply_type_arg
              (function_type
                (apply_type
                  (concrete_type))
                (arrow)
                (apply_type
                  (concrete_type))))))
        (line_comment))))
  (line_comment)
  (line_comment)
  (line_comment)
  (line_comment)
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (infix_expression
            (long_identifier_or_op
              (long_identifier
                (identifier)))
            (infix_op
              (symbolic_op))
            (infix_expression
              (long_identifier_or_op
                (long_identifier
                  (module)
                  (identifier)))
              (infix_op
                (symbolic_op))
              (long_identifier_or_op
                (long_identifier
                  (module)
                  (identifier)))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (application_expression
                    (long_identifier_or_op
                      (long_identifier
                        (module)
                        (identifier)))
                    (application_args
                      (long_identifier_or_op
                        (long_identifier
                          (identifier)))
                      (paren_expression
                        (expression_body
                          (application_expression
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (application_args
                              (long_identifier_or_op
                                (long_identifier
                                  (identifier)))))))))))))))))
  (value_declaration_top
    (value_declaration_left
      (identifier_pattern
        (long_identifier
          (identifier))))
    (expression_body
      (fun_expression
        (backslash)
        (argument_patterns
          (long_identifier
            (identifier)))
        (arrow)
        (expression_body
          (application_expression
            (long_identifier_or_op
              (long_identifier
                (module)
                (identifier)))
            (application_args
              (fun_expression
                (backslash)
                (argument_patterns
                  (long_identifier
                    (identifier))
                  (tag_pattern
                    (opaque_tag)
                    (record_pattern)))
                (arrow)
                (expression_body
                  (if_expression
                    (long_identifier_or_op
                      (long_identifier
                        (identifier)))
                    (then
                      (expression_body
                        (application_expression
                          (long_identifier_or_op
                            (long_identifier
                              (module)
                              (identifier)))
                          (application_args
                            (long_identifier_or_op
                              (long_identifier
                                (identifier)))
                            (paren_expression
                              (expression_body
                                (application_expression
                                  (long_identifier_or_op
                                    (long_identifier
                                      (module)
                                      (identifier)))
                                  (application_args
                                    (const
                                      (string))))))))))
                    (expression_body
                      (application_expression
                        (long_identifier_or_op
                          (long_identifier
                            (module)
                            (identifier)))
                        (application_args
                          (long_identifier_or_op
                            (long_identifier
                              (identifier)))
                          (paren_expression
                            (expression_body
                              (application_expression
                                (long_identifier_or_op
                                  (long_identifier
                                    (module)
                                    (identifier)))
                                (application_args
                                  (const
                                    (string)))))))))))))))))))

